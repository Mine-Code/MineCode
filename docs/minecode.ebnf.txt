expr
  if {value, "=>", value} ["_", "=>", value]
  value
    ["@"], ident
    "(", expr, ")"
    "[", expr, "]"
    int, ".", int
    str
    $suffix
      as = "as", ident
      subscript = "[", expr, "]"
      attribute = ".", ident
      call = "(", [expr, {",", expr}], ")"
      range = "...", value
  $order
    "++"|"--"
    - ~ !
    **
    << >>
    | ^ &
    * / %
    + -
    < > <= >=
    == !=
    and
    or
    <assign>

stmt
  for = "for", ident, "in", expr, block
  while = "while", conditional, block
  func_def = "func", ident, "(", [ident, {",", ident}], ")", block
  mcl = "mcl", ident, {".", ident}
  expr = ::expr
  declare_variable = "let" | ident, ident, ["@", int],
                     {ident, "(", expr, ")"}, "=", expr

program = {stmt}